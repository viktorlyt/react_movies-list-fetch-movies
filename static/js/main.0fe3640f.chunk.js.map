{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","useState","hasTitleError","setHasTitleError","queryWord","setQueryWord","isLoaded","setIsLoaded","newMovie","setNewMovie","handleInputQuery","inputQuery","handleFindMovie","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","movieFromServer","Poster","Title","Plot","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","disabled","classNames","onClick","App","setMovies","console","log","find","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fe3640f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","/* eslint-disable no-console */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAddMovie: (newMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onAddMovie,\n}) => {\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [queryWord, setQueryWord] = useState<string>('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const handleInputQuery = (inputQuery: string) => {\n    setQueryWord(inputQuery);\n  };\n\n  const handleFindMovie = async (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoaded(true);\n    const movieFromServer = await getMovie(queryWord);\n\n    setIsLoaded(false);\n\n    if ('Error' in movieFromServer) {\n      setHasTitleError(true);\n\n      return;\n    }\n\n    const {\n      Poster,\n      Title,\n      Plot,\n      imdbID,\n    } = movieFromServer;\n\n    setNewMovie({\n      title: Title,\n      description: Plot,\n      imgUrl: Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : Poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFindMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={queryWord}\n              onChange={(event) => {\n                handleInputQuery(event.target.value);\n                setHasTitleError(false);\n              }}\n            />\n          </div>\n\n          {hasTitleError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!queryWord}\n              className={classNames(\n                'button',\n                'is-light',\n                {\n                  'is-loading': isLoaded === true,\n                },\n              )}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {newMovie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  onAddMovie(newMovie);\n                  handleInputQuery('');\n                  setNewMovie(null);\n                  setHasTitleError(false);\n                }}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ResponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=65fbcff5';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","/* eslint-disable no-console */\nimport { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies(currentMovies => ([\n      ...currentMovies,\n      newMovie,\n    ]));\n  };\n\n  console.log(movies);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}